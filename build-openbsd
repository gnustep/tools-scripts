#!/bin/sh

echo "BUIDLING WITH CLANG and ARC"

export GSMAKE_CC=clang
export GSMAKE_CXX=clang++
export GSMAKE_CPP="clang -E"
export GSMAKE_LD=ld
export GSMAKE_AS=llvm-as
export EXTRA_GSMAKE_FLAGS="--with-objc-lib-flag=-lobjc2 --enable-strict-v2-mode --with-runtime-abi=gnustep-2.2 --with-library-combo=ng-gnu-gnu GS_WITH_ARC=1"
export GSMAKE_CPPFLAGS="-I/usr/local/include -I/usr/local/include/gnustep"
export GSMAKE_LDFLAGS="-L/usr/local/lib -lc++abi -lobjc2 -pthread"
export MAKE=gmake
export SUDO=sudo

export CPUS=`sysctl hw.ncpu | sed 's/hw.ncpu\=//g'`
export ROOT=/ 
export USR_ROOT=${ROOT}usr
export GNUSTEP_ROOT=${USR_ROOT}/GNUstep
export GNUSTEP_CONFIG_FILE=/etc/GNUstep/GNUstep.conf
export GNUSTEP_INSTALL_LD_SO_CONF=no
export PREFIX=${GNUSTEP_ROOT}

echo ""
echo "Installation directory is $GNUSTEP_ROOT"
echo "Building GNUstep for OpenBSD"
echo ""

SUDO='sudo LD_LIBRARY_PATH=$LD_LIBRARY_PATH'
scriptsdir="`pwd`/tools-scripts"

# Build libobjc2
./tools-scripts/compile-libobjc2

# Build make
cd tools-make
${MAKE} clean 2> /dev/null # stop it from complaining...
./configure --with-layout=gnustep --prefix="${PREFIX}" ${EXTRA_GSMAKE_FLAGS} CC="${GSMAKE_CC}" CXX="${GSMAKE_CXX}" CPP="${GSMAKE_CPP}" LD="${GSMAKE_LD}" AS="${GSMAKE_AS}" LDFLAGS="${GSMAKE_LDFLAGS}" CPPFLAGS="${GSMAKE_CPPFLAGS}"
echo "======== Build make"
${MAKE} -j${CPUS}
${SUDO} -u root ${MAKE} install
. ${GNUSTEP_ROOT}/System/Library/Makefiles/GNUstep.sh

# Build base
echo "======== Build base"
cd ../libs-base
${SUDO} ${MAKE} clean
./configure --with-installation-domain=SYSTEM
${MAKE} debug=yes -j${CPUS}
${SUDO} -u root ./install.sh ${GNUSTEP_ROOT} ${MAKE}
echo "==="

# Build gui
echo "======== Build gui"
cd ../libs-gui
${SUDO} ${MAKE} clean
./configure --with-x --enable-speech
${MAKE} debug=yes -j${CPUS}
${SUDO} -u root ./install.sh ${GNUSTEP_ROOT} ${MAKE}
echo "==="

# Build backend
echo "======== Build back"
cd ../libs-back
${SUDO} ${MAKE} clean
./configure --enable-graphics=cairo
${MAKE} debug=yes -j${CPUS}
${SUDO} -u root ./install.sh ${GNUSTEP_ROOT} ${MAKE}
echo "==="

# Build applications...
echo "======== Build ProjectCenter"
cd ../apps-projectcenter
${SUDO} ${MAKE} clean
${MAKE} debug=yes -j${CPUS}
${SUDO} ${MAKE} install

echo "======== Build Gorm"
cd ../apps-gorm
${SUDO} ${MAKE} clean
${MAKE} debug=yes -j${CPUS}
${SUDO} ${MAKE} install

echo "Done."

exit 0
